"""init

Revision ID: f6ef0ba5adf6
Revises: 
Create Date: 2024-09-10 10:42:40.382556

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f6ef0ba5adf6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('billing', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('billing', sa.Column('parking_history_id', sa.Integer(), nullable=False))
    op.add_column('billing', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('billing', sa.Column('cost', sa.Float(), nullable=True))
    op.add_column('billing', sa.Column('is_sent', sa.Boolean(), nullable=False))
    op.add_column('billing', sa.Column('is_paid', sa.Boolean(), nullable=False))
    op.add_column('cars', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('cars', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('cars', sa.Column('car_plate', sa.String(), nullable=False))
    op.add_column('parking_history', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('parking_history', sa.Column('start_time', sa.DateTime(), nullable=False))
    op.add_column('parking_history', sa.Column('end_time', sa.DateTime(), nullable=False))
    op.add_column('parking_history', sa.Column('car_id', sa.Integer(), nullable=False))
    op.add_column('parking_history', sa.Column('bill_id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('username', sa.String(), nullable=False))
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('is_banned', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['id'])
    op.create_unique_constraint(None, 'cars', ['id'])
    op.create_unique_constraint(None, 'parking_history', ['id'])
    op.create_unique_constraint(None, 'billing', ['id'])
    op.create_foreign_key(None, 'billing', 'parking_history', ['parking_history_id'], ['id'])
    op.create_foreign_key(None, 'billing', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'parking_history', 'cars', ['car_id'], ['id'])
    op.create_foreign_key(None, 'parking_history', 'billing', ['bill_id'], ['id'])
    op.create_foreign_key(None, 'cars', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'is_banned')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'password')
    op.drop_column('users', 'email')
    op.drop_column('users', 'username')
    op.drop_column('users', 'id')
    op.drop_constraint(None, 'parking_history', type_='foreignkey')
    op.drop_constraint(None, 'parking_history', type_='foreignkey')
    op.drop_column('parking_history', 'bill_id')
    op.drop_column('parking_history', 'car_id')
    op.drop_column('parking_history', 'end_time')
    op.drop_column('parking_history', 'start_time')
    op.drop_column('parking_history', 'id')
    op.drop_constraint(None, 'cars', type_='foreignkey')
    op.drop_column('cars', 'car_plate')
    op.drop_column('cars', 'user_id')
    op.drop_column('cars', 'id')
    op.drop_constraint(None, 'billing', type_='foreignkey')
    op.drop_constraint(None, 'billing', type_='foreignkey')
    op.drop_column('billing', 'is_paid')
    op.drop_column('billing', 'is_sent')
    op.drop_column('billing', 'cost')
    op.drop_column('billing', 'user_id')
    op.drop_column('billing', 'parking_history_id')
    op.drop_column('billing', 'id')
    # ### end Alembic commands ###
